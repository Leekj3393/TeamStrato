import { useNavigate, useParams, useSearchParams } from 'react-router-dom';
import ApprovalCSS from './Approval.module.css';
import { useDispatch, useSelector } from 'react-redux';
import { useEffect, useState } from 'react';
import { callApprovalDetailAPI, callApprovalAccessAPI } from '../../apis/ApprovalAPICalls';
import { callMyPageMemberAPI } from "../../apis/MyPageAPICalls";
import { callAppLineDetailAPI } from '../../apis/AppLineAPICalls';
import {getMemberId, decodeJwt} from '../../utils/TokenUtils';

function ApprovalAccessorPage () {

    const dispatch = useDispatch();
    const navigate = useNavigate();
    const { access, appDetail } = useSelector((state) => state.approvalReducer);
    const membersData = useSelector(state => state.myPageReducer.membersData);
    const { appLineDetail } = useSelector(state => state.applineReducer);
    const params = useParams();
    const appCode = params.appCode;

    // appLineCode 찾는 로직 추가
    const foundAppLineCode = appLineDetail?.find(
        (appLine) =>
        appLine?.accessor?.memberCode === membersData?.memberCode && appLine?.approval?.appCode === appCode
    );
    const appLineCode = foundAppLineCode?.appLineCode;

    


    const [form, setForm] = useState({
        appLineCode: appLineCode,
        appLineStatus: '',
        appTime: ''
      });

    useEffect(
        () => {
            dispatch(callApprovalDetailAPI({appCode}));
            dispatch(callAppLineDetailAPI({appCode}));
            dispatch(callMyPageMemberAPI());
        },[]
    );

    // 아래 부분을 활성화하여 본인인증에 필요한 상태값을 관리합니다.
    const [identifyingForm, setIdentifyingForm] = useState({
        memberId: getMemberId(),
        memberPassword: ''
    });
    
    useEffect(() => {
        if(access?.status === 200){
            alert("결재 승인/반려 처리가 완료되었습니다.");
            navigate('/', { replace : true });
        }
    }, [access])
    
    const onChangeIdentifyHandler = (e) => {
        setIdentifyingForm({
          ...identifyingForm,
          [e.target.name]: e.target.value
        });
      };

      const onClickIdenticationHandler = () => {

        if (identifyingForm.memberPassword === identifyingForm.memberPassword ) {
            // 비밀번호가 일치하는 경우
            alert('본인인증이 승인되었습니다.');
            // dispatch(callIdentifyAccessorAPI(identifyingForm)); // 본인인증 API 호출 시 identifyingForm을 인자로 전달
          } else {
            // 비밀번호가 일치하지 않는 경우
            alert('비밀번호가 일치하지 않습니다. 본인인증을 다시 시도해주세요.');
            return;
            // 본인인증을 다시 요구할 수 있는 알림창을 띄웁니다.
            // 예를 들어, 팝업창이나 모달 창을 띄워 본인인증 폼을 다시 입력받을 수 있습니다.
          }
      };

      const onClickApprovalAccessHandler = () => {
        const updatedForm = {
          ...form,
          appLineStatus: 'appAccessed',
          appTime: new Date().toString()
        };
        setForm(updatedForm);
        dispatch(callApprovalAccessAPI(updatedForm));
      };

    const onClickApprovalReturnHandler = () => {};

    // const onClickBack = () => {}

    function formatDate(dateString) {
        const date = new Date(dateString);
        const year = date.getFullYear();
        const month = String(date.getMonth() + 1).padStart(2, '0');
        const day = String(date.getDate()).padStart(2, '0');
        return `${year}년 ${month}월 ${day}일`;
    }

    return (
            <div className={ApprovalCSS}>
                <div className={ApprovalCSS.square}></div>
                <div className={ApprovalCSS.appContentDiv}>
                    <div className={ApprovalCSS.applineInfoBoxDiv2}>
                        <table>
                                <thead>
                                    <tr>
                                        <th className={ApprovalCSS.col01}>기안자</th>
                                        <th className={ApprovalCSS.col02}>제1 결재선</th>
                                        <th className={ApprovalCSS.col03}>제2 결재선</th>
                                        <th className={ApprovalCSS.col04}>최종 결재선</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td className={ApprovalCSS.col05}>{appDetail && appDetail?.member?.memberName}</td>
                                        {appLineDetail && appLineDetail?.map((appLine) => (
                                        <td className={ApprovalCSS.col05}>{appLine?.accessor?.memberName}</td>
                                        ))}
                                    </tr>
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <td className={ApprovalCSS.col09}>요청</td>
                                        {appLineDetail && appLineDetail?.map((appLine) => (
                                        <td className={ApprovalCSS.col05}>{appLine?.appLineStatus}</td>
                                        ))}
                                    </tr>
                                </tfoot>
                        </table>
                    </div>
                    <div className={ApprovalCSS.appAccessorDiv}>
                        <table className={ApprovalCSS.approvalAccessorTable}>
                            <tbody>
                                <tr className={ApprovalCSS.accessorTr1}>
                                    <th className={ApprovalCSS.col1}>문서번호</th>
                                    <td className={ApprovalCSS.col8}>{appDetail  && appDetail?.appCode}</td>
                                    <th className={ApprovalCSS.col5}>부서</th>
                                    <td className={ApprovalCSS.col9}>{appDetail && appDetail?.member?.department?.deptName}</td>
                                </tr>
                                <tr className={ApprovalCSS.accessorTr2}>
                                    <th className={ApprovalCSS.col2}>구분</th>
                                    <td className={ApprovalCSS.col10}>{appDetail && appDetail?.appType}</td>
                                    <th className={ApprovalCSS.col6}>상태</th>
                                    <td className={ApprovalCSS.col11}>{appDetail && appDetail?.appStatus}</td>
                                    <th className={ApprovalCSS.col7}>등록일</th>
                                    <td className={ApprovalCSS.col12}>{formatDate(appDetail && appDetail?.appRegistDate)}</td>
                                </tr>
                                <tr className={ApprovalCSS.accessorTr3}>
                                    <th className={ApprovalCSS.col3}>제목</th>
                                    <td className={ApprovalCSS.col13}>{appDetail && appDetail?.appTitle}</td>
                                </tr>
                                <tr className={ApprovalCSS.accessorTr4}>
                                    <th className={ApprovalCSS.col4}>내용</th>
                                    <td className={ApprovalCSS.col14}>
                                        {appDetail && appDetail?.appContent}
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                        <table className={ApprovalCSS.appAccessTable}>
                            <tr>
                                <th className={ApprovalCSS.col77}>본인인증</th>
                                <td className={ApprovalCSS.col55}>
                                    <input name="memberId" type="text" placeholder='아이디' value={getMemberId()} readOnly={true}/*  onChange={onChangeIdentifyHandler} *//>
                                    <input name="memberPassword" type="password" placeholder='비밀번호' onChange={onChangeIdentifyHandler}/>
                                    <div className={ApprovalCSS.identifyBtn} onClick={onClickIdenticationHandler}><img src='../../image/identify-btn.png'/></div>
                                </td>
                            </tr>
                        </table>
                        <div className={ApprovalCSS.registAppLineDiv}>
                            <div className={ApprovalCSS.accessBtn} onClick={onClickApprovalAccessHandler}><img src='../../image/access-btn.png'/></div>
                            <div className={ApprovalCSS.returnBtn} onClick={onClickApprovalReturnHandler}><img src='../../image/deny-btn.png'/></div>
                        </div>
                    </div>
                </div>
            </div> 
    );
            
}

export default ApprovalAccessorPage;